name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: authservice
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy CloudFormation stack
        env:
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_1: ${{ secrets.SUBNET_1 }}
          SUBNET_2: ${{ secrets.SUBNET_2 }}
          AMI_ID: ${{ secrets.AMI_ID }}
          ECR_REPOSITORY_URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
        run: |
          aws cloudformation deploy \
            --template-file cloudformation-template.yaml \
            --stack-name authservice-cfn \
            --parameter-overrides \
              VPC=${VPC_ID} \
              Subnets=${SUBNET_1},${SUBNET_2} \
              AMI=${AMI_ID} \
              ECRRepositoryUri=${ECR_REPOSITORY_URI} \
            --capabilities CAPABILITY_IAM